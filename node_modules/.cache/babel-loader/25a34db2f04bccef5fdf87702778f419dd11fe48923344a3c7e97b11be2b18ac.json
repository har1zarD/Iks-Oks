{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerem\\\\OneDrive\\\\Desktop\\\\oks\\\\src\\\\component\\\\Iks-oks\\\\game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Game.scss';\nimport clickSound from '../../sound/clickSound.wav';\nimport winnerSound from '../../sound/winSound.mp3';\nimport drawSound from '../../sound/drawSound.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialBoard = Array(9).fill(null);\nconst clickAudio = new Audio(clickSound);\nconst winnerAudio = new Audio(winnerSound);\nconst drawAudio = new Audio(drawSound);\nconst Game = () => {\n  _s();\n  const [board, setBoard] = useState(initialBoard);\n  const [xIsNext, setXIsNext] = useState(true);\n  const handleClick = index => {\n    if (board[index] || calculateWinner(board)) {\n      return;\n    }\n    const newBoard = [...board];\n    newBoard[index] = xIsNext ? 'X' : 'O';\n    setBoard(newBoard);\n    setXIsNext(!xIsNext);\n    clickAudio.play();\n    const winner = calculateWinner(newBoard);\n    if (winner === 'draw') {\n      drawAudio.play();\n    } else if (winner) {\n      winnerAudio.play();\n    }\n  };\n  const handleResetClick = () => {\n    setBoard(initialBoard);\n    clickAudio.play();\n  };\n  const renderSquare = index => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: () => handleClick(index),\n      children: board[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  };\n  const calculateWinner = board => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (const [a, b, c] of lines) {\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        return board[a];\n      }\n    }\n    if (board.every(cell => cell !== null)) {\n      drawAudio.play();\n      return 'draw';\n    }\n    return null;\n  };\n  const winner = calculateWinner(board);\n  let status;\n  if (winner) {\n    status = winner === 'draw' ? \"It's a draw!\" : `Winner: ${winner}`;\n  } else {\n    status = `Next player: ${xIsNext ? 'X' : 'O'}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: Array.from({\n        length: 9\n      }, (_, index) => renderSquare(index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: handleResetClick,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"ncSphzM6DfrbXLkP4bNMDnN6+sM=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","clickSound","winnerSound","drawSound","jsxDEV","_jsxDEV","initialBoard","Array","fill","clickAudio","Audio","winnerAudio","drawAudio","Game","_s","board","setBoard","xIsNext","setXIsNext","handleClick","index","calculateWinner","newBoard","play","winner","handleResetClick","renderSquare","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","lines","a","b","c","every","cell","status","from","length","_","_c","$RefreshReg$"],"sources":["C:/Users/jerem/OneDrive/Desktop/oks/src/component/Iks-oks/game.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Game.scss';\r\nimport clickSound from '../../sound/clickSound.wav';\r\nimport winnerSound from '../../sound/winSound.mp3';\r\nimport drawSound from '../../sound/drawSound.mp3'; \r\n\r\nconst initialBoard = Array(9).fill(null);\r\nconst clickAudio = new Audio(clickSound);\r\nconst winnerAudio = new Audio(winnerSound);\r\nconst drawAudio = new Audio(drawSound);\r\n\r\nconst Game = () => {\r\n  const [board, setBoard] = useState(initialBoard);\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n\r\n  const handleClick = (index) => {\r\n    if (board[index] || calculateWinner(board)) {\r\n      return;\r\n    }\r\n\r\n    const newBoard = [...board];\r\n    newBoard[index] = xIsNext ? 'X' : 'O';\r\n    setBoard(newBoard);\r\n    setXIsNext(!xIsNext);\r\n\r\n    clickAudio.play();\r\n\r\n    const winner = calculateWinner(newBoard);\r\n    if (winner === 'draw') {\r\n      drawAudio.play();\r\n    } else if (winner) {\r\n      winnerAudio.play();\r\n    }\r\n  };\r\n\r\n  const handleResetClick = () => {\r\n    setBoard(initialBoard);\r\n\r\n    clickAudio.play();\r\n  };\r\n\r\n  const renderSquare = (index) => {\r\n    return (\r\n      <button className=\"square\" onClick={() => handleClick(index)}>\r\n        {board[index]}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const calculateWinner = (board) => {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n\r\n    for (const [a, b, c] of lines) {\r\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\r\n        return board[a];\r\n      }\r\n    }\r\n\r\n    if (board.every((cell) => cell !== null)) {\r\n      drawAudio.play();\r\n      return 'draw';\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const winner = calculateWinner(board);\r\n  let status;\r\n  if (winner) {\r\n    status = winner === 'draw' ? \"It's a draw!\" : `Winner: ${winner}`;\r\n  } else {\r\n    status = `Next player: ${xIsNext ? 'X' : 'O'}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"board\">\r\n        {Array.from({ length: 9 }, (_, index) => renderSquare(index))}\r\n      </div>\r\n      <div className=\"status\">{status}</div>\r\n      <button className=\"reset-button\" onClick={handleResetClick}>\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}